{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","timer","minutes","seconds","break","selection","hasStarted","initSessionLength","initBreakLength","clockTimer","alarmTimer","increment","bind","assertThisInitialized","decrement","resetTimer","setTheClock","startTheClock","alarm","pause","finish","startTheBreak","breakTimer","timerMinutes","breakMinutes","currentTarget","id","newMins","initSession","setState","initBreak","beep","document","getElementById","currentTime","window","clearInterval","clearTimeout","newSession","newBreak","duration","console","log","mainTimer","setInterval","setTimeout","play","_this2","display_mins","display_secs","react_default","a","createElement","className","onClick","e","material_icons_react_default","icon","src","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8cf6736b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n// eslint-disable-next-line\r\nimport MaterialIcon, { colorPalette } from \"material-icons-react\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      timer: {\r\n        minutes: 1,\r\n        seconds: 0\r\n      },\r\n      break: {\r\n        minutes: 1,\r\n        seconds: 0\r\n      },\r\n      selection: \"Session\",\r\n      hasStarted: false,\r\n      initSessionLength: 1,\r\n      initBreakLength: 1,\r\n      clockTimer: null,\r\n      alarmTimer: null\r\n    };\r\n\r\n    this.increment = this.increment.bind(this);\r\n    this.decrement = this.decrement.bind(this);\r\n    this.resetTimer = this.resetTimer.bind(this);\r\n    this.setTheClock = this.setTheClock.bind(this);\r\n    this.startTheClock = this.startTheClock.bind(this);\r\n    this.timer = this.timer.bind(this);\r\n    this.alarm = this.alarm.bind(this);\r\n    this.pause = this.pause.bind(this);\r\n    this.finish = this.finish.bind(this);\r\n    this.startTheBreak = this.startTheBreak.bind(this);\r\n    this.breakTimer = this.breakTimer.bind(this);\r\n  }\r\n\r\n  increment(timer) {\r\n    const timerMinutes = this.state.timer.minutes;\r\n    const breakMinutes = this.state.break.minutes;\r\n\r\n    if (timer.currentTarget.id === \"session-increment\" && timerMinutes < 60) {\r\n      const newMins = this.state.timer.minutes + 1;\r\n      const { seconds } = this.state.timer;\r\n      const initSession = this.state.initSessionLength + 1;\r\n\r\n      this.setState({ timer: { minutes: newMins, seconds: seconds } });\r\n      this.setState({ initSessionLength: initSession });\r\n    } else if (\r\n      timer.currentTarget.id === \"break-increment\" &&\r\n      breakMinutes < 60\r\n    ) {\r\n      const newMins = this.state.break.minutes + 1;\r\n      const { seconds } = this.state.break;\r\n      const initBreak = this.state.initBreakLength + 1;\r\n\r\n      this.setState({ break: { minutes: newMins, seconds: seconds } });\r\n      this.setState({ initBreakLength: initBreak });\r\n    }\r\n  }\r\n\r\n  decrement(timer) {\r\n    const timerMinutes = this.state.timer.minutes;\r\n    const breakMinutes = this.state.break.minutes;\r\n\r\n    if (timer.currentTarget.id === \"session-decrement\" && timerMinutes > 0) {\r\n      const newMins = this.state.timer.minutes - 1;\r\n      const { seconds } = this.state.timer;\r\n      const initSession = this.state.initSessionLength - 1;\r\n\r\n      this.setState({ timer: { minutes: newMins, seconds: seconds } });\r\n      this.setState({ initSessionLength: initSession });\r\n    } else if (\r\n      timer.currentTarget.id === \"break-decrement\" &&\r\n      breakMinutes > 0\r\n    ) {\r\n      const newMins = this.state.initBreakLength - 1;\r\n      const { seconds } = this.state.break;\r\n      const initBreak = this.state.initBreakLength - 1;\r\n\r\n      this.setState({ break: { minutes: newMins, seconds: seconds } });\r\n      this.setState({ initBreakLength: initBreak });\r\n    }\r\n  }\r\n\r\n  resetTimer() {\r\n    const beep = document.getElementById(\"beep\");\r\n    beep.currentTime = 0;\r\n    beep.pause();\r\n\r\n    // Reset everything to 25-5 time\r\n    this.setState({ timer: { minutes: 25, seconds: 0 } });\r\n    this.setState({ break: { minutes: 5, seconds: 0 } });\r\n    this.setState({ initSessionLength: 25 });\r\n    this.setState({ initBreakLength: 5 });\r\n\r\n    // Clear any alarms or timers that started\r\n    window.clearInterval(this.state.clockTimer);\r\n    window.clearTimeout(this.state.alarmTimer);\r\n    this.setState({ hasStarted: false });\r\n\r\n    this.setState({ selection: \"Session\" });\r\n  }\r\n\r\n  setTheClock() {\r\n    const newSession = this.state.initSessionLength;\r\n    const newBreak = this.state.initBreakLength;\r\n\r\n    this.setState({ timer: { minutes: newSession, seconds: 0 } });\r\n    this.setState({ break: { minutes: newBreak, seconds: 0 } });\r\n  }\r\n\r\n  startTheClock() {\r\n    this.setState({ hasStarted: true });\r\n\r\n    let duration = this.state.timer.minutes * 60;\r\n    duration += this.state.timer.seconds;\r\n\r\n    console.log(duration);\r\n\r\n    const mainTimer = window.setInterval(this.timer, 100);\r\n    this.setState({ clockTimer: mainTimer });\r\n\r\n    const alarmTimer = window.setTimeout(this.alarm, duration * 100 + 100);\r\n    this.setState({ alarmTimer: alarmTimer });\r\n  }\r\n\r\n  startTheBreak() {\r\n    this.setState({ hasStarted: true });\r\n\r\n    let duration = this.state.break.minutes * 60;\r\n    duration += this.state.break.seconds;\r\n\r\n    console.log(duration);\r\n\r\n    const mainTimer = window.setInterval(this.breakTimer, 100);\r\n    this.setState({ clockTimer: mainTimer });\r\n\r\n    const alarmTimer = window.setTimeout(this.finish, duration * 100 + 100);\r\n    this.setState({ alarmTimer: alarmTimer });\r\n  }\r\n\r\n  timer() {\r\n    let minutes = this.state.timer.minutes;\r\n    let seconds = this.state.timer.seconds;\r\n\r\n    if (seconds === 0 && minutes >= 1) {\r\n      minutes--;\r\n      seconds = 59;\r\n      this.setState({ timer: { minutes: minutes, seconds: seconds } });\r\n    } else if (minutes === 0 && seconds === 0) {\r\n      this.alarm();\r\n    } else {\r\n      seconds--;\r\n      this.setState({ timer: { minutes: minutes, seconds: seconds } });\r\n    }\r\n\r\n    console.log(minutes, seconds);\r\n  }\r\n\r\n  breakTimer() {\r\n    let minutes = this.state.break.minutes;\r\n    let seconds = this.state.break.seconds;\r\n\r\n    if (seconds === 0 && minutes >= 1) {\r\n      minutes--;\r\n      seconds = 59;\r\n      this.setState({ break: { minutes: minutes, seconds: seconds } });\r\n    } else if (minutes === 0 && seconds === 0) {\r\n      this.finish();\r\n    } else {\r\n      seconds--;\r\n      this.setState({ break: { minutes: minutes, seconds: seconds } });\r\n    }\r\n\r\n    console.log(minutes, seconds);\r\n  }\r\n\r\n  alarm() {\r\n    const beep = document.getElementById(\"beep\");\r\n\r\n    this.setState({ selection: \"Break\" });\r\n    window.clearInterval(this.state.clockTimer);\r\n    window.clearTimeout(this.state.alarmTimer);\r\n    beep.play();\r\n    setTimeout(this.startTheBreak, 1500);\r\n  }\r\n\r\n  pause() {\r\n    window.clearInterval(this.state.clockTimer);\r\n    window.clearTimeout(this.state.alarmTimer);\r\n    this.setState({ hasStarted: false });\r\n  }\r\n\r\n  finish() {\r\n    const beep = document.getElementById(\"beep\");\r\n\r\n    this.setState({ selection: \"Session\" });\r\n    window.clearInterval(this.state.clockTimer);\r\n    window.clearTimeout(this.state.alarmTimer);\r\n    beep.play();\r\n    this.setTheClock();\r\n    setTimeout(this.startTheClock, 1500);\r\n  }\r\n\r\n  render() {\r\n    const initSession = this.state.initSessionLength;\r\n    const initBreak = this.state.initBreakLength;\r\n    const hasStarted = this.state.hasStarted;\r\n\r\n    // Show the time from active timer\r\n    const display_mins =\r\n      this.state.selection === \"Session\"\r\n        ? this.state.timer.minutes\r\n        : this.state.break.minutes;\r\n    const display_secs =\r\n      this.state.selection === \"Session\"\r\n        ? this.state.timer.seconds\r\n        : this.state.break.seconds;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1>Pomodoro Clock</h1>\r\n        </header>\r\n        {/* Top part to hold clock times and adjust buttons */}\r\n        <div className=\"top-panels\">\r\n          <div>\r\n            {/* Session Timer Adjust */}\r\n            <p id=\"session-label\">Session Length</p>\r\n            <p id=\"session-length\">{initSession}</p>\r\n            <div className=\"button-style\" />\r\n            <button\r\n              id=\"session-increment\"\r\n              className=\"btn\"\r\n              onClick={!hasStarted ? e => this.increment(e) : null}\r\n            >\r\n              <MaterialIcon icon=\"arrow_upward\" />\r\n            </button>\r\n            <button\r\n              id=\"session-decrement\"\r\n              className=\"btn\"\r\n              onClick={!hasStarted ? e => this.decrement(e) : null}\r\n            >\r\n              <MaterialIcon icon=\"arrow_downward\" />\r\n            </button>\r\n          </div>\r\n          <div>\r\n            {/* Break Timer Adjust */}\r\n            <p id=\"break-label\">Break Length</p>\r\n            <p id=\"break-length\">{initBreak}</p>\r\n            <div className=\"button-style\" />\r\n            <button\r\n              id=\"break-increment\"\r\n              className=\"btn\"\r\n              onClick={!hasStarted ? e => this.increment(e) : null}\r\n            >\r\n              <MaterialIcon icon=\"arrow_upward\" />\r\n            </button>\r\n            <button\r\n              id=\"break-decrement\"\r\n              className=\"btn\"\r\n              onClick={!hasStarted ? e => this.decrement(e) : null}\r\n            >\r\n              <MaterialIcon icon=\"arrow_downward\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Where the clock gets displayed */}\r\n        <div className=\"main-timer\">\r\n          {/* This will swap between timers */}\r\n          <h2 id=\"timer-label\">{this.state.selection}</h2>\r\n          <p id=\"time-left\">\r\n            {/* This will display the active timer */}\r\n            {display_mins > 9 ? display_mins : \"0\" + display_mins}:\r\n            {display_secs > 9 ? display_secs : \"0\" + display_secs}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Play/pause and reset buttons */}\r\n        <div className=\"button-area\">\r\n          <button\r\n            id=\"start_stop\"\r\n            className=\"btn\"\r\n            onClick={!hasStarted ? () => this.startTheClock(this) : this.pause}\r\n          >\r\n            <MaterialIcon icon=\"play_arrow\" />\r\n            <MaterialIcon icon=\"pause_circle_outline\" />\r\n          </button>\r\n          <button id=\"reset\" className=\"btn\" onClick={this.resetTimer}>\r\n            <MaterialIcon icon=\"loop\" />\r\n          </button>\r\n        </div>\r\n        <audio\r\n          src=\"https://storage.cloud.google.com/my-little-alarm-sounds/Short-ringtone-for-notification.mp3?_ga=2.21506491.-1426996322.1544825551\"\r\n          id=\"beep\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}